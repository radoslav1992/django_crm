# Generated by Django 4.2.7 on 2025-10-03 12:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='company name')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('industry', models.CharField(blank=True, max_length=100, verbose_name='industry')),
                ('employees', models.IntegerField(blank=True, null=True, verbose_name='number of employees')),
                ('annual_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='annual revenue')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('address', models.TextField(blank=True, verbose_name='address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='country')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='postal code')),
                ('vat_number', models.CharField(blank=True, max_length=50, verbose_name='VAT number')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500, verbose_name='tags')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'company',
                'verbose_name_plural': 'companies',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last name')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='position')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='phone')),
                ('mobile', models.CharField(blank=True, max_length=50, verbose_name='mobile')),
                ('address', models.TextField(blank=True, verbose_name='address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='country')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='postal code')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500, verbose_name='tags')),
                ('linkedin', models.URLField(blank=True, verbose_name='LinkedIn')),
                ('twitter', models.URLField(blank=True, verbose_name='Twitter')),
                ('facebook', models.URLField(blank=True, verbose_name='Facebook')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts', to='crm.company')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'contact',
                'verbose_name_plural': 'contacts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='deal name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('value', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='value')),
                ('currency', models.CharField(default='EUR', max_length=3, verbose_name='currency')),
                ('status', models.CharField(choices=[('open', 'Open'), ('won', 'Won'), ('lost', 'Lost')], default='open', max_length=20, verbose_name='status')),
                ('probability', models.IntegerField(default=0, verbose_name='probability %')),
                ('expected_close_date', models.DateField(blank=True, null=True, verbose_name='expected close date')),
                ('actual_close_date', models.DateField(blank=True, null=True, verbose_name='actual close date')),
                ('lost_reason', models.TextField(blank=True, verbose_name='reason for loss')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('tags', models.CharField(blank=True, max_length=500, verbose_name='tags')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='crm.company')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='crm.contact')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'deal',
                'verbose_name_plural': 'deals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Pipeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('is_default', models.BooleanField(default=False, verbose_name='default pipeline')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pipelines', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'pipeline',
                'verbose_name_plural': 'pipelines',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('task_type', models.CharField(choices=[('call', 'Call'), ('email', 'Email'), ('meeting', 'Meeting'), ('deadline', 'Deadline'), ('todo', 'To-Do')], default='todo', max_length=20, verbose_name='type')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20, verbose_name='priority')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='due date')),
                ('completed', models.BooleanField(default=False, verbose_name='completed')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='completed at')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='crm.company')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='crm.contact')),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='crm.deal')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'task',
                'verbose_name_plural': 'tasks',
                'ordering': ['completed', '-due_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('probability', models.IntegerField(default=0, help_text='0-100', verbose_name='win probability %')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('pipeline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='crm.pipeline')),
            ],
            options={
                'verbose_name': 'stage',
                'verbose_name_plural': 'stages',
                'ordering': ['pipeline', 'order'],
            },
        ),
        migrations.AddField(
            model_name='deal',
            name='pipeline',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='crm.pipeline'),
        ),
        migrations.AddField(
            model_name='deal',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='crm.stage'),
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('note', 'Note'), ('call', 'Call'), ('email', 'Email'), ('meeting', 'Meeting'), ('task', 'Task'), ('deal_created', 'Deal Created'), ('deal_updated', 'Deal Updated'), ('deal_won', 'Deal Won'), ('deal_lost', 'Deal Lost')], max_length=20, verbose_name='type')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='crm.company')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='crm.contact')),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='crm.deal')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'activity',
                'verbose_name_plural': 'activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_type', models.CharField(choices=[('contact', 'Contact'), ('company', 'Company'), ('deal', 'Deal')], max_length=20, verbose_name='entity type')),
                ('field_name', models.CharField(max_length=100, verbose_name='field name')),
                ('field_type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('date', 'Date'), ('checkbox', 'Checkbox'), ('select', 'Select'), ('textarea', 'Text Area')], max_length=20, verbose_name='field type')),
                ('field_options', models.JSONField(blank=True, default=dict, verbose_name='field options')),
                ('is_required', models.BooleanField(default=False, verbose_name='required')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_fields', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'custom field',
                'verbose_name_plural': 'custom fields',
                'ordering': ['entity_type', 'order'],
                'unique_together': {('owner', 'entity_type', 'field_name')},
            },
        ),
    ]
